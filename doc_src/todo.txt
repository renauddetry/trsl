// (C) Copyright Renaud Detry   2007-2010.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

/**
 * @defgroup todo To Do List
 * @ingroup evolution
 *
 * @section todo_short_term Short Term
 *
 * - Create make_systematic_sample_iterator tests
 *
 * - Rethink iterator names
 *
 * - Document time complexity
 *
 * - Register classes for BOOST_AUTO
 * 
 * - Sample permutation in ppfilter_iterator_prototype.
 *
 * - Create systematic sample iterator that doesn't do permutations.
 *
 * - Remove mp_weight_accessor.
 *
 * @section todo_long_term Long Term
 * 
 * - Add debug stubs. One good thing to check for would be that
 * is_picked_systematic doesn't return more elements than requested,
 * and that it has returned the exact number of elements upon
 * destruction.  This will call for an extra bool @em beenCalled
 * to prevent errors in temporary instantiations of
 * is_picked_systematic.
 * 
 * - Add a module for boost::filter_iterator explanation
 * (e.g. interoperability, constness, etc...).
 *
 * - Write an importance_sample_iterator.
 *
 * @section todo_open_questions Open Questions
 * 
 */
 
